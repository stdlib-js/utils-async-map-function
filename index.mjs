// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{isPrimitive as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";function u(e,t){return s(t)?(o(t,"thisArg")&&(e.thisArg=t.thisArg),o(t,"series")&&(e.series=t.series,!a(e.series))?new TypeError(n("invalid option. `%s` option must be a boolean. Option: `%s`.","series",e.series)):o(t,"limit")&&(e.limit=t.limit,!l(e.limit))?new TypeError(n("invalid option. `%s` option must be a positive integer. Option: `%s`.","limit",e.limit)):null):new TypeError(n("invalid argument. Options argument must be an object. Value: `%s`.",t))}function m(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var i=function e(){if(this instanceof e){var i=[null];i.push.apply(i,arguments);var n=Function.bind.apply(t,i);return new n}return t.apply(this,arguments)};i.prototype=t.prototype}else i={};return Object.defineProperty(i,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(i,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})})),i}var d=m(Object.freeze({__proto__:null,default:()=>()=>{}}))("map-function-async:limit");function f(e,t,i,n){var r,s,o,a,l,u,m;if(d("Number of invocations: %d",e),o=new Array(e),0===e)return d("Finished invoking a function."),n(null,o);for(a=e<t.limit?e:t.limit,d("Concurrency limit: %d",a),r=0,l=-1,u=e-1,m=0;m<a;m++)l<u&&f();function f(){var e;d("Invocation number: %d",e=l+=1),i.call(t.thisArg,e,(function(t,i){if(s)return;if(t)return s=!0,p(t);o[e]=i,p()}))}function p(t){return t?(d("Encountered an error: %s",t.message),n(t)):(d("Completed invocation %d of %d.",r+=1,e),l<u?f():r===e?(d("Finished invoking a function."),n(null,o)):void 0)}}function p(e,s){var o,a,l;if(o={},arguments.length>1){if(a=u(o,e))throw a;l=s}else l=e;if(!t(l))throw new TypeError(n("invalid argument. Last argument must be a function. Value: `%s`.",l));return o.series?o.limit=1:o.limit||(o.limit=r),m;function m(e,r){if(!i(e))throw new TypeError(n("invalid argument. Number of function invocations must be a nonnegative integer. Value: `%s`.",e));if(!t(r))throw new TypeError(n("invalid argument. Last argument must be a function. Value: `%s`.",r));return f(e,o,l,(function(e,t){if(e)return r(e);r(null,t)}))}}function c(e,t,i,n){if(arguments.length<4)return p(e)(t,i);p(i,e)(t,n)}e(c,"factory",p);export{c as default,p as factory};
//# sourceMappingURL=index.mjs.map
